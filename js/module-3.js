// –§—É–Ω–∫—Ü—ñ—è checkStorage(storage, item) –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:
// storage - –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤, —â–æ –æ–ø–∏—Å—É—î –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç–æ–≤–∞—Ä–∏ –Ω–∞ —Å–∫–ª–∞–¥—ñ
// item - —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é —Ç–æ–≤–∞—Ä–∞, –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —è–∫–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è–ª–∞,
// —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ–π —Ç–∞–∫–∏–π —Ç–æ–≤–∞—Ä –≤ –º–∞—Å–∏–≤—ñ storage —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞:

// —Ä—è–¥–æ–∫ "<item> is available to order!", –¥–µ item - —Ü–µ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä–∞,
// —è–∫—â–æ —Ç–æ–≤–∞—Ä –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ
// —Ä—è–¥–æ–∫ "Sorry! We are out of stock!", —è–∫—â–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–º–∞—î –≤ –º–∞—Å–∏–≤—ñ
// –ó—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± –ø–æ—à—É–∫ –∑–∞ —ñ–º'—è–º —Ç–æ–≤–∞—Ä—É –±—É–≤ –Ω–µ–∑–∞–ª–µ–∂–Ω–∏–π –≤—ñ–¥ —Ä–µ–≥—ñ—Å—Ç—Ä—É,
// —Ç–æ–±—Ç–æ –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "plum" —ñ "pLuM"
// –º–∞—é—Ç—å –±—É—Ç–∏ –∑–Ω–∞–π–¥–µ–Ω—ñ —É –º–∞—Å–∏–≤—ñ["apple", "plum", "pear"].

// function checkStorage(storage, item) {
//   if (storage.includes(item.toLowerCase())) {
//     return `${item.toLowerCase()} is available to order!`;
//   } else {
//     return `Sorry! We are out of stock!`;
//   }
// }

// console.log(checkStorage(['apple', 'plum', 'pear'], 'pLuM')); // plum is available to order!
// ===============================================================================
// ===============================================================================
// –§—É–Ω–∫—Ü—ñ—è getCommonElements(array1, array2), –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –º–∞—Å–∏–≤–∏
// (array1 —Ç–∞ array2) –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ –≤ —è–∫–æ—Å—Ç—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤.

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó:

// –°—Ç–≤–æ—Ä–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É.
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–∏–∫–ª for –¥–ª—è —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ —É array1.
// –£ —Ç—ñ–ª—ñ —Ü–∏–∫–ª—É –ø–µ—Ä–µ–≤—ñ—Ä, —á–∏ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç —ñ—Å–Ω—É—î —É array2 –∑–∞
// –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É includes.
// –Ø–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î, —Ç–æ –¥–æ–¥–∞–π –µ–ª–µ–º–µ–Ω—Ç –¥–æ –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É.
// –ü–æ–≤–µ—Ä–Ω–∏ –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π –º–∞—Å–∏–≤ —Å–ø—ñ–ª—å–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó.
// function getCommonElements(array1, array2) {
//   const res = [];
//   for (i = 0; i < array1.length; i++) {
//     if (array2.includes(array1[i])) {
//       res.push(array1[i]);
//     }
//   }
//   return res;
// }
// console.log(getCommonElements([1, 2, 3], [2, 4])); // [2]
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27])); // [12, 27, 3]
// ==========================================================
// ============================================================
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice(order) —Ç–∞–∫,
// —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É —á–∏—Å–µ–ª –≤ –º–∞—Å–∏–≤—ñ order.
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–∏–∫–ª for...of –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É.

// function calculateTotalPrice(order) {
//   let sum = 0;
//   for (const elem of order) {
//     sum += elem;
//   }
//   return sum;
// }

// console.log(calculateTotalPrice([12, 85, 37, 4])); // 138
// console.log(calculateTotalPrice([164, 48, 291])); // 503

// ===================================================================================
// ========================================================================================
// –§—É–Ω–∫—Ü—ñ—è createReversedArray() –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏ –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.
//  –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —É—Å—ñ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤,
// –∞–ª–µ –≤ –º–∞—Å–∏–≤—ñ –≤–æ–Ω–∏ –ø–æ–≤–∏–Ω–Ω—ñ –π—Ç–∏ —É –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É.–¢–æ–±—Ç–æ,
// –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É createReversedArray(1, 2, 3), —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –º–∞—Å–∏–≤[3, 2, 1].
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –∞–±–æ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É toReversed(), —è–∫–∏–π –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –º–∞—Å–∏–≤—É
//  —ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–æ–±–æ—Ç–∏ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —É –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–º—É –ø–æ—Ä—è–¥–∫—É.

// function createReversedArray() {
//   const args = Array.from(arguments);
//   return args.toReversed();
// }

// console.log(createReversedArray(12, 85, 37, 4)); // [4, 37, 85, 12]

// ====================================================================
// ======================================================================
// 1. –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ `genres` –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ "Jazz" —Ç–∞ "Blues".
// 2. –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
// 3. –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// 4. –í–∏–≤–µ–¥—ñ—Ç—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –≤ –∫–æ–Ω—Å–æ–ª—å. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É
//    –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// 5. –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// 6. –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.

// const genres = ['Jazz', 'Blues'];
// genres.push('Rock-n-roll');
// console.log(genres);
// console.log(genres[1]);
// console.log(genres[genres.length - 1]);
// genres.shift();
// genres.unshift('Country', 'Reggae');
// console.log(genres);
// =============================================================================
// =================================================================================
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö
// –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π `values` —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ
// –ø—Ä–æ–±—ñ–ª–æ–º.

// const values = '8 11';
// const numbers = values.split(' ');
// const width = +numbers[0];
// const height = +numbers[1];
// const result = width * height;
// console.log(result);
// ===================================================================
// ======================================================================
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É `fruits` —Ü–∏–∫–ª–æ–º `for`. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
// –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ `–Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞`.
// –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ `1`.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
// for (let i = 0; i < fruits.length; i++) {
//   const result = `${i + 1}: ${fruits[i]}`;
//   console.log(result);
// }

// =============================================================
// ================================================================
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£
// –∑–º—ñ–Ω–Ω–∏—Ö `names` —Ç–∞ `phones` –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
// —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞
// –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.

// const names = 'Jacob, William, Solomon, Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';
// const namesArray = names.split(',');
// const phonesArray = phones.split(',');
// console.log(namesArray);
// console.log(phonesArray);

// for (let i = 0; i < namesArray.length; i++) {
//   const list = `${namesArray[i]} - ${phonesArray[i]}`;
//   console.log(list);
// }

// ================================================================
// ===================================================================
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –æ–∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —Ç–∞
// –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª
// –ø—Ä–æ–±—ñ–ª—É. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.

// const string = 'Welcome to the future';
// const stirngArr = string.split(' ').slice(1, -1).join(' ').trim();
// console.log(stirngArr);

// =======================================================================
// ==========================================================================
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –ª—ñ—Ç–µ—Ä) —ñ –≤–∏–≤–æ–¥–∏—Ç—å —ó—ó –≤
// –∫–æ–Ω—Å–æ–ª—å.

// const string = 'Welcome to the future';
// const stringArr = string.split(' ').toReversed().join(' ');
// console.log(stringArr);

// ===========================================================================
// ==============================================================================
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é
// –µ–ª–µ–º–µ–Ω—Ç.

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// function sortByFirstLetter(a, b) {
//   const firstA = a[0].toLowerCase();
//   const firstB = b[0].toLowerCase();

//   if (firstA < firstB) {
//     return -1;
//   } else if (firstA > firstB) {
//     return 1;
//   } else {
//     return 0;
//   }
// }

// // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é
// langs.sort(sortByFirstLetter);

// console.log(langs);

// // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é
// langs.sort((a, b) => a[0].toLowerCase().localeCompare(b[0].toLowerCase()));

// console.log(langs);

// =================================================
// ====================================================
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è
// –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.

// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0];
// for (const number of numbers) {
//   if (number < min) {
//     min = number;
//   }
// }
// console.log(min); // 1

// ======================================================================
// ============================================================================
